C51 COMPILER V9.60.0.0   TEMP                                                              04/18/2022 21:16:48 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TEMP
OBJECT MODULE PLACED IN .\Objects\Temp.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Temp.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\Temp
                    -.lst) TABS(2) OBJECT(.\Objects\Temp.obj)

line level    source

   1          /*this program is for displaying the temperature on 16*2 lcd display using 8051 microcontroller , LM35 sen
             -sor and ADC0804*/
   2          
   3          #include<reg51.h>
   4          
   5          sbit rs = P2 ^ 7; //Register Select(RS) pin of 16*2 lcd
   6          sbit rw = P2 ^ 6; //Read/Write(RW) pin of 16*2 lcd
   7          sbit en = P2 ^ 5; //Enable(E) pin of 16*2 lcd
   8          sbit IN1 = P2 ^ 0;
   9          sbit IN2 = P2 ^ 1;
  10          
  11          sbit rd_adc = P3 ^ 0; //Read(RD) pin of ADC0804
  12          sbit wr_adc = P3 ^ 1; //Write(WR) pin of ADC0804
  13          sbit intr_adc = P3 ^ 2; //Interrupt(INTR) pin of ADC0804
  14          
  15          int TemptOpen = 0;
  16          
  17          void delay(unsigned int); //function for creating delay
  18          void cmdwrt(unsigned char); //function for sending commands to 16*2 lcd display
  19          void datawrt(unsigned char); //function for sending data to 16*2 lcd display
  20          void convert_display(unsigned char); //function for converting ADC value to temperature and display it on 
             -16*2 lcd display
  21          
  22          void main(void) //main function
  23          {
  24   1        
  25   1        unsigned char i;
  26   1        unsigned char cmd[] = {
  27   1          0x38,
  28   1          0x01,
  29   1          0x06,
  30   1          0x0c,
  31   1          0x82
  32   1        }; //16*2 lcd initialization commands
  33   1        unsigned char data1[] = "Temperature:";
  34   1        unsigned char value;
  35   1      
  36   1      
  37   1        P1 = 0xFF; //make Port 1 as input port
  38   1        P0 = 0x00; //make Port 0 as output port
  39   1      
  40   1        for (i = 0; i < 5; i++) //send commands to 16*2 lcd display one command at a time
  41   1        {
  42   2          cmdwrt(cmd[i]); //function call to send commands to 16*2 lcd display
  43   2          delay(1);
  44   2        }
  45   1      
  46   1        for (i = 0; i < 12; i++) //send data to 16*2 lcd display one character at a time
  47   1        {
  48   2          datawrt(data1[i]); //function call to send data to 16*2 lcd display
  49   2          delay(1);
  50   2        }
  51   1      
  52   1        intr_adc = 1; //make INTR pin as input
C51 COMPILER V9.60.0.0   TEMP                                                              04/18/2022 21:16:48 PAGE 2   

  53   1        rd_adc = 1; //set RD pin HIGH
  54   1        wr_adc = 1; //set WR pin LOW
  55   1      
  56   1        while (1) //repeat forever
  57   1        {
  58   2          wr_adc = 0; //send LOW to HIGH pulse on WR pin
  59   2          delay(1);
  60   2          wr_adc = 1;
  61   2          while (intr_adc == 1); //wait for End of Conversion
  62   2          rd_adc = 0; //make RD = 0 to read the data from ADC0804
  63   2          value = P1; //copy ADC data
  64   2          convert_display(value); //function call to convert ADC data into temperature and display it on     16*
             -2 lcd display
  65   2          delay(1000); //interval between every cycles
  66   2          rd_adc = 1; //make RD = 1 for the next cycle
  67   2        
  68   2        }
  69   1      
  70   1      }
  71          void cmdwrt(unsigned char x) {
  72   1        P0 = x; //send the command to Port 0 on which 16*2 lcd is connected
  73   1        rs = 0; //make RS = 0 for command
  74   1        rw = 0; //make RW = 0 for write operation
  75   1        en = 1; //send a HIGH to LOW pulse on Enable(E) pin to start commandwrite operation 
  76   1        delay(1);
  77   1        en = 0;
  78   1      }
  79          void datawrt(unsigned char y) {
  80   1        P0 = y; //send the data to Port 0 on which 16*2 lcd is connected
  81   1        rs = 1; //make RS = 1 for command
  82   1        rw = 0; //make RW = 0 for write operation
  83   1        en = 1; //send a HIGH to LOW pulse on Enable(E) pin to start datawrite operation
  84   1        delay(1);
  85   1        en = 0;
  86   1      }
  87          void convert_display(unsigned char value) {
  88   1        unsigned char x1, x2, x3;
  89   1      
  90   1        cmdwrt(0xc6); //command to set the cursor to 6th position of 2nd line on 16*2 lcd
  91   1      
  92   1        x1 = (value / 10); //divide the value by 10 and store quotient in variable x1
  93   1        x1 = x1 + (0x30); //convert variable x1 to ascii by adding 0x30
  94   1        x2 = value % 10; //divide the value by 10 and store remainder in variable x2
  95   1        x2 = x2 + (0x30); //convert variable x2 to ascii by adding 0x30
  96   1        x3 = 0xDF; //ascii value of degree(°) symbol
  97   1        TemptOpen = value;
  98   1          if(TemptOpen == 39)
  99   1          {
 100   2            IN1 = 1;
 101   2            IN2 = 0;
 102   2          }else {
 103   2            IN1 = 0;
 104   2            IN2 = 0;
 105   2          }
 106   1        datawrt(x1); //display temperature on 16*2 lcd display
 107   1        datawrt(x2);
 108   1        datawrt(x3);
 109   1        datawrt('C');
 110   1      }
 111          
 112          void delay(unsigned int z) {
 113   1        unsigned int p, q;
C51 COMPILER V9.60.0.0   TEMP                                                              04/18/2022 21:16:48 PAGE 3   

 114   1        for (p = 0; p < z; p++) //repeat for 'z' times
 115   1        {
 116   2          for (q = 0; q < 1375; q++); //repeat for 1375 times
 117   2        }
 118   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    279    ----
   CONSTANT SIZE    =     18    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      23
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
